apiVersion: v1
kind: Service
metadata:
  name: iserver
  labels:
    k8s-app: iserver
spec:
  ports:
  - port: 30000
    protocol: TCP
  clusterIP: None
  selector:
    k8s-app: iserver
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: iserver
spec:
  serviceName: "iserver"
  replicas: 4
  podManagementPolicy: "Parallel"
  updateStrategy:
    type: "RollingUpdate"
  selector:
    matchLabels:
      k8s-app: iserver
  template:
    metadata:
      labels:
        k8s-app: iserver
    spec:
      containers:
        - name: iserver
          image: "iostio/iost-node:3.3.1-$COMMIT"
          imagePullPolicy: "IfNotPresent"
          command:
            - /bin/bash
            - -c
            - ./iserver -f /var/lib/iserver/iserver-${HOSTNAME##*-}.yml 2>&1
          ports:
            - containerPort: 30000
            - containerPort: 30001
            - containerPort: 30002
            - containerPort: 30003
          volumeMounts:
            - name: contract-volume
              mountPath: /var/lib/iserver/contract
            - name: config-volume
              mountPath: /var/lib/iserver
            - name: storage-volume
              mountPath: "/data"
              subPath: ""
          resources:
            limits:
              cpu: 2000m
              memory: 4000Mi
            requests:
              cpu: 1000m
              memory: 4000Mi
      volumes:
        - name: config-volume
          configMap:
            name: iserver-config
        - name: contract-volume
          configMap:
            name: iserver-contract
  volumeClaimTemplates:
    - metadata:
        name: storage-volume
      spec:
        storageClassName: gp2
        accessModes:
          - ReadWriteOnce
        resources:
          requests:
            storage: "10Gi"
